# Generated by Django 4.2.13 on 2024-06-27 15:51

import acctmarket2.utils.media
import auto_prefetch
import ckeditor_uploader.fields
import cloudinary.models
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="CartOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=100,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("paid_status", models.BooleanField(default=False)),
                (
                    "product_status",
                    models.CharField(
                        choices=[
                            ("PROCESSING", "PROCESSING"),
                            ("SHIPPED", "SHIPPED"),
                            ("DELIVERD", "DELIVERD"),
                        ],
                        default="PROCESSING",
                        max_length=30,
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User Order",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Cart Orders",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, default="", max_length=50)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, default="", max_length=255, verbose_name="image"
                    ),
                ),
                ("slug", models.SlugField(blank=True, default="")),
                (
                    "sub_category",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="ecommerce.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, default="", max_length=50)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, default="", max_length=255, verbose_name="image"
                    ),
                ),
                (
                    "description",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        default="", null=True, verbose_name="Description"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=100,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "oldprice",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=100,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "spacification",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        default="", null=True, verbose_name="specification"
                    ),
                ),
                (
                    "unique_keys",
                    models.JSONField(
                        default=list, help_text="List of unique keys for the product"
                    ),
                ),
                (
                    "product_status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "DRAFT"),
                            ("DISABLED", "DISABLED"),
                            ("IN_REVIEW", "IN_REVIEW"),
                            ("REJECTED", "REJECTED"),
                            ("PUBLISHED", "PUBLISHED"),
                        ],
                        default="IN_REVIEW",
                        max_length=10,
                    ),
                ),
                ("in_stock", models.BooleanField(default=True)),
                ("featured", models.BooleanField(default=False)),
                ("digital", models.BooleanField(default=True)),
                ("best_seller", models.BooleanField(default=False)),
                ("special_offer", models.BooleanField(default=False)),
                ("just_arrived", models.BooleanField(default=True)),
                ("deal_of_the_week", models.BooleanField(default=False)),
                ("deal_start_date", models.DateTimeField(blank=True, null=True)),
                ("deal_end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "resource",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=acctmarket2.utils.media.MediaHelper.get_file_upload_path,
                    ),
                ),
                (
                    "category",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ecommerce.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Products",
                "permissions": [
                    ("can_crud_product", "Can create, update, and delete product")
                ],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Tags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, default="", max_length=50)),
            ],
            options={
                "ordering": ["title", "created_at"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="WishList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ecommerce.product",
                        verbose_name="Product Wishlist",
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Wishlists",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("review", models.TextField()),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "⭐"),
                            (2, "⭐⭐"),
                            (3, "⭐⭐⭐"),
                            (4, "⭐⭐⭐⭐"),
                            (5, "⭐⭐⭐⭐⭐"),
                        ],
                        default=3,
                    ),
                ),
                (
                    "product",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ecommerce.product",
                        verbose_name="Product Review",
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User Review",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product Reviews",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProductImages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, default="", max_length=50)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, default="", max_length=255, verbose_name="image"
                    ),
                ),
                (
                    "product",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ecommerce.product",
                        verbose_name="Product image",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product images",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, default="", max_digits=100
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True, default="", max_length=100, unique=True
                    ),
                ),
                (
                    "status",
                    models.CharField(blank=True, default="pending", max_length=20),
                ),
                ("verified", models.BooleanField(default=False)),
                (
                    "order",
                    auto_prefetch.OneToOneField(
                        blank=True,
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="ecommerce.cartorder",
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CartOrderItems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("unique_key", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "quantity",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=100,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=100,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("invoice_no", models.CharField(blank=True, default="", max_length=20)),
                (
                    "order",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="ecommerce.cartorder",
                        verbose_name="Order",
                    ),
                ),
                (
                    "product",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ecommerce.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Cart Order Items",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("address", models.CharField(blank=True, default="", max_length=100)),
                ("status", models.BooleanField(default=False)),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User Address",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Address",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
